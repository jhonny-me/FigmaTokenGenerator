name: Release

on:
  release:
    types: [created]

env:
  DEVELOPER_DIR: /Applications/Xcode_12.5.app/Contents/Developer

jobs:
  release-build:
    runs-on: macos-11
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Tarball source
      run: |
        tar -zcvf $TARGET --exclude .git .
      env:
        TARGET: ${{ runner.temp }}/source.tar.gz
    - name: Attach tarball to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ runner.temp }}/source.tar.gz
        asset_name: FigmaTokenGenerator-${{ github.event.release.tag_name }}-source.tar.gz
        asset_content_type: application/tar+gzip

    - name: Build fat binary
      run: |
        swift build -c release --arch x86_64 --arch arm64

    - name: Import Signing Certificates
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.APPLE_CERTS }}
        p12-password: ${{ secrets.APPLE_CERTS_PASSWORD }}

    - name: Code Sign
      run: |
        codesign --force --options runtime --sign 'Developer ID Application: Qiang Gu (GZG2S47WHM)' .build/apple/Products/Release/FigmaTokenGenerator

    - name: Store build artifact
      uses: actions/upload-artifact@v1
      with:
        name: FigmaTokenGenerator-${{ github.event.release.tag_name }}
        path: .build/apple/Products/Release/FigmaTokenGenerator

    - name: Archive ZIP
      run: zip --junk-paths ${{ runner.temp }}/FigmaTokenGenerator-${{ github.event.release.tag_name }}.zip .build/apple/Products/Release/FigmaTokenGenerator LICENSE.md

    - name: Notarize ZIP
      run: |
        sh notarize.sh
      env:
        BUNDLE_ID: com.johnny.FigmaTokenGenerator
        DEV_ACCOUNT: ${{ secrets.APPLE_ID_EMAIL }}
        PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        DEV_TEAM: GZG2S47WHM
        FILENAME: ${{ runner.temp }}/FigmaTokenGenerator-${{ github.event.release.tag_name }}.zip
          
    - name: Attach ZIP to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ runner.temp }}/FigmaTokenGenerator-${{ github.event.release.tag_name }}.zip
        asset_name: FigmaTokenGenerator-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip

    - name: Publish to Cocoapods
      run: |
        export POD_VERSION=$(echo $TAG_NAME | cut -c2-)
        pod trunk push
      env:
        TAG_NAME: ${{ github.event.release.tag_name }}
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TOKEN }}